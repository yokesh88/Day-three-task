//A) Print odd numbers in an array:

//anonymous Function:
// let odd = function (arr){
// for (let i = 0; i < arr.length; i++){
//         if(i%2!==0){
// console.log(arr[i]);
//         }
//     }
// }
// arr =[1,2,3,4,5,6,7,8,9,10]
// odd(arr);

//IIFE Function:
// let odd = (function(arr){
//     for (let i=0; i < arr.length; i++){
//         if(arr[i]%2!==0){
//             console.log(arr[i]);
//         }}
//     }) ([1,2,3,4,5,6,7,8,9,10]);

// Arrow Function:
// let odd = (arr)=>{
//     for (let i=0; i < arr.length; i++){
//         if(i%2!==0){
//             console.log(arr[i]);
//         }}}
//         arr = [1,2,3,4,5,6,7,8,9,10]
//         odd(arr);

// B) Convert all the strings to title caps in a string array:

//anonymous Function:
// let caps = function (str){
//     str = str.toLowerCase().split(" ");
//     for (let i = 0; i < str.length; i++){
//     str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
// }
// return str.join(" ");
// }
// let str = "welcome yoki";
// console.log(caps(str));

//IIFE Function:
// let caps = (function (str){
//     str = str.toLowerCase().split(" ");
//     for (let i = 0; i < str.length; i++){
//         str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
//     }
//     return str.join(" ");
// })("Hi yoki");
// console.log(caps);

// Arrow Function:
// let caps = (str) => {
//     str = str.toLowerCase().split(" ");
//     for (let i = 0; i < str.length; i++){
//         str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
//     }
//     return str.join(" ");
// }
// let str = "Weclome Yoki";
// console.log(caps(str));

// C) Sum of all numbers in an array:

//anonymous Function:
// let sumArr = function(arr){
//     let sum = 0;
//     for (let i = 0; i < arr.length; i++){
//         sum=sum+arr[i];
//     }
//     return sum;
// }
// let arr = [1,2,3,4,5,6,7,8,9,10]
// console.log(sumArr(arr));

//IIFE Function:
// let sumArr = (function(arr){
//     let sum = 0;
//     for (let i = 0; i< arr.length; i++){
//         sum=sum+arr[i];
//     }
//     return sum;
// })([1,2,3,4,5,6,7,8,9,10])
// console.log(sumArr);

// Arrow Function:
// let sumArr = (arr) =>{
//     let sum = 0;
//     for (let i = 0; i < arr.length; i++){
//     sum = sum+arr[i]; 
//     } 
//     return sum;
//   }
//   let arr = [1,2,3,4,5,6,7,8,9,10];
//   console.log(sumArr(arr))

// D) Return all the prime numbers in an array:

//anonymous Function:
// function isPrime(n) {
//   for (let i = 2; i < n; i++) {
//     if (n % i === 0) {
//       return false;
//     }}
//   return true;
// }
// let primeNumbers = function (arr) {
//   let primeNumbers = [];
//   for (let num of arr) {
//     if (isPrime(num)) {
//       primeNumbers.push(num);
//     }
//   }
//   return primeNumbers;
// }
// let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
// console.log(primeNumbers(arr));

//IIFE Function:
// function isprime(n){
//     for (let i = 2; i < n; i++){
//     if (n % i === 0){
//         return false;
//     }}
//     return true;
// }
// let PrimeNumbers = (function (arr){
//     let PrimeNumbers = [];
//     for (let num of arr){
//         if(isprime(num)){
//             PrimeNumbers.push(num);
//         }}
//         return PrimeNumbers;
//     }) ([1,2,3,4,5,6,7,8,9,10])
//     console.log(PrimeNumbers);

// Arrow Function:
// function isPrime(n){
//     for(let i = 2; i < n; i++){
//     if (n % i === 0){
//         return false;
//     }}
//     return true;
// }
// let PrimeNumbers = (arr)=>{
//     let PrimeNumbers = [];
//     for (let num of arr){
//         if(isPrime(num)){
//             PrimeNumbers.push(num);
//         }}
//         return PrimeNumbers;
// } 
// let arr = [1,2,3,4,5,6,7,8,9,10,11,12]
// console.log(PrimeNumbers(arr));

// E) Return all the palindromes in an array:

//anonymous Function:
// function Palindrome(str) {
//   let filteredStr = str.toLowerCase().replace(/\s/g, "");
//   return filteredStr === filteredStr.split("").reverse().join("");
// }
// let palindromesResult = function (arr) {
//   let palindromes = [];
//   for (let str of arr) {
//     if (Palindrome(str)) {
//       palindromes.push(str);
//     }}
//   return palindromes;
// };
// let arr = [ "mom", "madam", "peep", "level", "hello"];
// console.log(palindromesResult(arr));

//IIFE Function:
// function Palindrome(str) {
//     let filteredStr = str.toLowerCase().replace(" ");
//     return filteredStr === filteredStr.split('').reverse().join('');
//   }
//   let palindromesResult = (function (arr) {
//     let palindromes = [];
//     for (let str of arr) {
//       if (Palindrome(str)) {
//         palindromes.push(str);
//       }
//     }
//   return palindromes;
//   })(["mom","hello","peep"]);
//   console.log(palindromesResult);

// Arrow Function:
// function Palindrome(str) {
//     let filteredStr = str.toLowerCase().replace(/\s/g, '');
//  return filteredStr === filteredStr.split('').reverse().join('');
// }
// let palindromesResult = (arr) => {
//    let palindromes = [];
//    for (const str of arr) {
//     if (Palindrome(str)) {
//       palindromes.push(str);
//     }
//   }
// return palindromes;
// }
// let arr = ["mom","hello","peep"];
// console.log(palindromesResult(arr));

// F) Return median of two sorted arrays of the same size:

// anonymous Function:
// let median = function (arr1,arr2) {
//     let mergedArray = arr1.concat(arr2).sort((a,b) => a-b);
//     let middleIndex = mergedArray.length/2;
//     if(mergedArray.length % 2 === 0) {
//     return (mergedArray[middleIndex - 1]+mergedArray[middleIndex])/2;
//     }
//     return mergedArray[middleIndex];
// }
// let arr1 = [1,2,3,4,5];
// let arr2 = [6,7,8,9,10];
// console.log(median(arr1,arr2));

//IIFE Function:
// let median = (function (arr1,arr2) {
//     let mergedArray = arr1.concat(arr2).sort((a,b) => a-b);
//     let middleIndex = mergedArray.length/2;
//     if(mergedArray.length % 2 === 0) {
//     return (mergedArray[middleIndex - 1]+mergedArray[middleIndex])/2;
//     }
//     return mergedArray[middleIndex];
// }) ([1,2,3,4,5,6,7,8],[11,12,13,14,15,16,17,18]);
// console.log(median);

// G)Remove duplicates from an array:

// anonymous Function:
// let duplicateRemoval = function (arr) {
//     let unique = [];
//     for (i=0;i < arr.length; i++){
//         if(unique.indexOf(arr[i]) === -1) {
//             unique.push(arr[i]);
//         }}
//         return unique;
//     }
//     let arr = [1,1,2,2,3,3,4,4,5,5];
//     console.log(duplicateRemoval(arr));

//IIFE Function:
// let duplicateRemoval = (function (arr) {
//     let unique = [];
//     for (i=0;i < arr.length; i++){
//         if(unique.indexOf(arr[i]) === -1) {
//             unique.push(arr[i]);
//         }}
//         return unique;
//     })([1,1,8,8,3,3,6,6,5,5]);
//     console.log(duplicateRemoval);

// H)Rotate an array by k times:
// anonymous Function:
// let rotatedArray = function rotatedArray(arr ,k){
//     if (k<0 || k>=arr.length){
//         return arr;
//     }
//     reverse(arr,0,arr.length-1);
//     reverse(arr,0,k-1);
//     reverse(arr,k,arr.length-1);
//     return arr;
// }
// function reverse(arr,start,end){
//     while(start < end){
//         [arr[start],arr[end]] = [arr[end],arr[start]];
//         start++;
//         end--;
//     }}
//     let arr = [1,2,3,4,5,6];
//     let k = 2;
//     console.log(rotatedArray(arr,k));

//IIFE Function:
// function reverse(arr,start,end){
//     while(start < end){
//         [arr[start],arr[end]] = [arr[end],arr[start]];
//         start++;
//         end--;
//     }}
//     let rotatedArray = (function rotatedArray(arr ,k){
//     if (k<0 || k>=arr.length){
//         return arr;
//     }
//     reverse(arr,0,arr.length-1);
//     reverse(arr,0,k-1);
//     reverse(arr,k,arr.length-1);
//     return arr;
// })([3,2,5,7,8],2);
// console.log(rotatedArray);
